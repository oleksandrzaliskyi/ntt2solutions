// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/12/Keyboard.jack

/**
 * A library for handling user input from the keyboard.
 */
class Keyboard {

    /** Initializes the keyboard. */
    function void init() {
      return;
    }

    /**
     * Returns the character of the currently pressed key on the keyboard;
     * if no key is currently pressed, returns 0.
     *
     * Recognizes all ASCII characters, as well as the following keys:
     * new line = 128 = String.newline()
     * backspace = 129 = String.backspace()
     * left arrow = 130
     * up arrow = 131
     * right arrow = 132
     * down arrow = 133
     * home = 134
     * End = 135
     * page up = 136
     * page down = 137
     * insert = 138
     * delete = 139
     * ESC = 140
     * F1 - F12 = 141 - 152
     */
    function char keyPressed() {
      return Memory.peek(24576);
    }

    /**
     * Waits until a key is pressed on the keyboard and released,
     * then echoes the key to the screen, and returns the character
     * of the pressed key.
     */
    function char readChar() {
      var int ch;
      while (ch=0){
        let ch = Keyboard.keyPressed();
      }
      while(~(Keyboard.keyPressed()=0)){

      }
      do Output.printChar(ch);
      return ch;
    }

    /**
     * Displays the message on the screen, reads from the keyboard the entered
     * text until a newline character is detected, echoes the text to the screen,
     * and returns its value. Also handles user backspaces.
     */
    function String readLine(String message) {
      var String str;
      var char ch;
      let str = String.new(100);
      do Output.printString(message);
      while(~(ch=128)){
        let ch = Keyboard.readChar();
        if(ch = 128){ // new line
          do Output.println();
          return str;
        }
        else{
          if (ch=129){ //not newline, but backspace
            do str.eraseLastChar();
            //do Output.backSpace();
          }
          else // not newline, not backspace
          {
            let str = str.appendChar(ch);
          }
        }
      }
      return str;
    }

    /**
     * Displays the message on the screen, reads from the keyboard the entered
     * text until a newline character is detected, echoes the text to the screen,
     * and returns its integer value (until the first non-digit character in the
     * entered text is detected). Also handles user backspaces.
     */
    function int readInt(String message) {
      var int number, ch, len, counter, multiplicand;
      var String str;
      do Output.printString(message);

      let number = 0;
      let multiplicand = 1;
      let len = 0;
      let str = String.new(7);

      while(~(ch=128)){ //not enter
        let ch = Keyboard.readChar();

        if(ch=129){
          if (str.length()>0){
            do str.eraseLastChar();
          }
        }
        else{ //not backspace but digit or
          if (((ch>47)&(ch<58))|(ch=45)){
            let str = str.appendChar(ch);
            //If minus in the end
            let len = str.length();
          }
          else{
            do Output.backSpace();
          }
        }
      }
      let counter = str.length();
      while(counter>0){
        let counter = counter - 1;

        do Output.printChar(str.charAt(counter));
        if (str.charAt(counter)=45){
          let number = (-1)*number;
          return number;
        }
        let number = number + ((str.charAt(counter)-48)*multiplicand);
        let multiplicand = multiplicand * 10;
      }


      return number;
    }
}
